import telebot
import random
from telebot import types
from ExchangeRateApi import *
import requests
from bs4 import BeautifulSoup
import time

bot = telebot.TeleBot('7459337661:AAGB37AI_7e4pYz943iJKC63699MBYhtGuQ')
api  = ExchangeRateApi("d10bb83f31daf59c5678869e")
global _help
global amount
new_post_url = None
_help = True

@bot.message_handler(commands=['start'])
def main(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µüöÄ', callback_data='start_learning')
    btn2 = types.InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ‚è≥', callback_data='continue_learning')
    btn3 = types.InlineKeyboardButton('–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ãüõ†', callback_data='tools_fenance')
    btn4 = types.InlineKeyboardButton('–ù–æ–≤–æ—Å—Ç–∏ –æ —Ä—ã–Ω–∫–µ‚ö°Ô∏è',callback_data='news')
    markup.add(btn1)
    markup.add(btn2)
    markup.add(btn3)
    markup.add(btn4)
    hello_message =  random.choice(['–ü—Ä–∏–≤–µ—Ç!\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:',
                                    "–õ–∏–∫—É—é—Ç –∞–∫—Ü–∏–∏!\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
                                    "–ê–∫—Ü–∏–∏ –µ—Å—Ç—å? –ê –µ—Å–ª–∏ –Ω–∞–π–¥—É?\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
                                    "–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π!\n–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
                                    f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
                                    "Oh.. Here we go again.. \n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
                                    f"–≠—Ç–æ –≤–µ–¥—å —Ç—ã, {message.from_user.first_name}? –ù—É –ø—Ä–∏–≤–µ—Ç!\n–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
                                    f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {message.from_user.first_name}.\n–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
                                    f"–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–π –ø—Ä–∏–±—ã–ª—å, –≥—Ä—É—Å—Ç–∏ –ø–æ —É–±—ã—Ç–∫–∞–º.\n–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, {message.from_user.first_name}? "])
    bot.send_message(message.chat.id, hello_message, reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    global amount
    global _help

    if callback.data == 'continue_learning':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton("1. –û—Å–Ω–æ–≤—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤", callback_data="1")
        btn2 = types.InlineKeyboardButton("2. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä—ã–Ω–∫–∏", callback_data="2")
        btn3 = types.InlineKeyboardButton("3.–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", callback_data="3")
        btn4 = types.InlineKeyboardButton("4. –û—Å–Ω–æ–≤—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", callback_data="4")
        btn5 = types.InlineKeyboardButton("5. –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏", callback_data="5")
        markup.add(btn1,btn2,btn3,btn4,btn5)
        bot.send_message(callback.message.chat.id,"–ù–∞ –∫–∞–∫–æ–º—É –º–æ–¥—É–ª–µ –≤—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å?",reply_markup=markup)

    if callback.data == "1":
        Lesson_1(callback.message)
    if callback.data == "2":
        Lesson_2(callback.message)
    if callback.data == "3":
        Lesson_3(callback.message)
    if callback.data == "4":
        bot.send_message(callback.message.chat.id,"–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
    if callback.data == "5":
        bot.send_message(callback.message.chat.id, "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")

    if callback.data == 'start_learning':
        bot.send_message(callback.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –ù–∞—á–Ω–µ–º –Ω–∞—à–µ –æ–±—É—á–µ–Ω–∏–µ! –ü–ª–∞–Ω —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 7 –º–æ–¥—É–ª–µ–π:"
                        "\n<b>1. –û—Å–Ω–æ–≤—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤</b>"
                         "\n<b>2. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä—ã–Ω–∫–∏</b>"
                         "\n<b>3. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</b>"
                         "\n<b>4. –û—Å–Ω–æ–≤—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</b>"
                         "\n<b>5. –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏</b>"
                         "\n<b>6. –õ–∏—á–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã</b>"
                         "\n<b>7. –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –ø–æ–Ω—è—Ç–∏—è</b>"
                        '\n\n –ù–∞—á–Ω–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ –º–æ–¥—É–ª—è "–û—Å–Ω–æ–≤—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤"', parse_mode= "HTML")
        time.sleep(3)
        bot.send_message(callback.message.chat.id, "–û–±—É—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ –ø–æ —á–∞—Å—Ç—è–º:"
                                                   "\n<b>1 —á–∞—Å—Ç—å</b> - —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Ç–µ—Ä–∏–∞–ª"
                                                   "\n<b>2 —á–∞—Å—Ç—å</b> - —Ç–µ—Å—Ç, –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —É—Å–≤–æ–µ–Ω–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (—Ç–µ—Å—Ç –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏)"
                                                   "\n\n–ù—É —á—Ç–æ–∂, –Ω–∞—á–Ω–µ–º! (—É—Ä–∞–∞ –Ω–∞–ø–∏—à–∏ –Ω–∞—á–Ω–µ–º! –≤—É—Ö—É—É)", parse_mode= "HTML")
        bot.register_next_step_handler(callback.message,Lesson_1)

    if callback.data == "skip_test_1":
        markup = types.ReplyKeyboardMarkup()
        btn_con = types.KeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        markup.add(btn_con)
        bot.send_message(callback.message.chat.id, "–¢–æ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é!",reply_markup=markup)
        bot.register_next_step_handler(callback.message, Lesson_2)
    if callback.data == "skip_test_2":
        markup = types.ReplyKeyboardMarkup()
        btn_con = types.KeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        markup.add(btn_con)
        bot.send_message(callback.message.chat.id, "–¢–æ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é!", reply_markup=markup)
        bot.register_next_step_handler(callback.message, Lesson_3)

    if callback.data == "start_test_1":
        Test_1(callback.message)

    if callback.data == "start_test_2":
        Test_2(callback.message)

    if callback.data == "tools_fenance":
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç", callback_data= "converter")
        btn2 = types.InlineKeyboardButton("–ê–∫—Ü–∏–∏", callback_data= "stock")
        markup.add(btn1)
        markup.add(btn2)
        bot.send_message(callback.message.chat.id, "–ß—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ?", reply_markup= markup)

    if callback.data == "converter":
        if  _help:
            bot.send_message(callback.message.chat.id, '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º "–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç"?'
                                                   '\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—É—é —Å—É–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤ –ø–æ—Å–ª–µ–¥—É—é—â–µ–º –±—É–¥–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–∑ –æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –≤ –¥—Ä—É–≥—É—é, –Ω–∞–ø—Ä–∏–º–µ—Ä "100".\n'
                                                   '\n–ü–æ—Å–ª–µ, —á–µ—Ä–µ–∑ —Å–ª—ç—à (—ç—Ç–æ –≤–æ—Ç —Ç–∞–∫–æ–π –∑–Ω–∞–∫ "/") –≤–≤–µ–¥–∏—Ç–µ –±—É–∫–≤–µ–Ω–Ω—ã–π –∫–æ–¥ –Ω—É–∂–Ω–æ–π –≤–∞–ª—é—Ç—ã (RUB/EUR, RUB/USD).'
                                                    '\n\n–¢–∞–∫–∂–µ –µ—Å—Ç—å –±—ã—Å—Ç—Ä–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞–ª—é—Ç: USD/RUB –∏ EUR/RUB.')
            _help = False
        bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:")
        bot.register_next_step_handler(callback.message, summa)
    if callback.data == "another":
        markup_ant = types.InlineKeyboardMarkup()
        btn_view = types.InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–¥—ã –≤–∞–ª—é—Ç", url="https://www.exchangerate-api.com/docs/supported-currencies")
        markup_ant.add(btn_view)
        bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –∑–Ω–∞—á–µ–Ω–∏–π (–∫–æ–¥—ã –≤–∞–ª—é—Ç) —á–µ—Ä–µ–∑ —Å–ª—ç—à:",reply_markup=markup_ant)
        bot.register_next_step_handler(callback.message, owncurrency)

    if callback.data == 'usd/rub':
        text = api.get_pair_conversion("USD", "RUB", 1)
        values = callback.data.upper().split('/')
        num = 0
        for i in text:
            num += 1
            if i == "B":
                res = text[:num]
                break
        course = res.split("\n")
        res_text = res.split()
        revers_text = " ".join(res_text[::-1])
        num_probels = 0
        finaly_text = ""
        for i in revers_text:
            if i == " ":
                num_probels += 1
            if num_probels == 1:
                finaly_text = finaly_text + i
            if num_probels == 2:
                break
        finaly_text = finaly_text.strip()
        bot.send_message(callback.message.chat.id, f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å {values[0]} –∫ {values[1]}: {course[2]}"
                                                   f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—É—Ä—Å—É: {round(float(finaly_text), 2) * amount}")
    if callback.data == 'eur/rub':
        text = api.get_pair_conversion("EUR", "RUB", 1)
        values = callback.data.upper().split('/')
        num = 0
        for i in text:
            num += 1
            if i == "B":
                res = text[:num]
                break
        course = res.split("\n")
        res_text = res.split()
        revers_text = " ".join(res_text[::-1])
        num_probels = 0
        finaly_text = ""
        for i in revers_text:
            if i == " ":
                num_probels += 1
            if num_probels == 1:
                finaly_text = finaly_text + i
            if num_probels == 2:
                break
        finaly_text = finaly_text.strip()
        bot.send_message(callback.message.chat.id, f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å {values[0]} –∫ {values[1]}: {course[2]}"
                                                   f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—É—Ä—Å—É: {round(float(finaly_text),2)*amount}")

    if callback.data == "stock":
        bot.send_message(callback.message.chat.id, "–ê–∫—Ü–∏–∏")
    if callback.data == "news":
        News(callback.message)

def summa(message):
    global amount
    try:
        amount = int(message.text.strip())
    except ValueError:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.")
        bot.register_next_step_handler(message, summa)
        return
    if amount > 0:
        markup_con = types.InlineKeyboardMarkup()
        btn_USD_RUB = types.InlineKeyboardButton("USD/RUB", callback_data='usd/rub')
        btn_EUR_RUB = types.InlineKeyboardButton("EUR/RUB", callback_data='eur/rub')
        btn_another = types.InlineKeyboardButton("–î—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ", callback_data='another')
        markup_con.add(btn_USD_RUB, btn_EUR_RUB)
        markup_con.row(btn_another)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã", reply_markup=markup_con)

    else:
        bot.send_message(message.chat.id,"–í—ã –≤–≤–µ–ª–∏ —Å—É–º–º—É –º–µ–Ω—å—à–µ –Ω—É–ª—è")
        bot.register_next_step_handler(message, summa)

def owncurrency(message):
    try:
        values = str(message.text).upper().split('/')
        text = api.get_pair_conversion(values[0], values[1], 1)
        num = 0
        for i in text:
            num += 1
            if i == values[1][0] and text[num] == values[1][1] and text[num+1] == values[1][-1]:
                res = text[:num]
                break
        course = text.split("\n")
        res_text = res.split()
        revers_text = " ".join(res_text[::-1])
        num_probels = 0
        finaly_text = ""
        for i in revers_text:
            if i == " ":
                num_probels += 1
            if num_probels == 1:
                finaly_text = finaly_text + i
            if num_probels == 2:
                break
        finaly_text = finaly_text.strip()
        bot.send_message(message.chat.id, f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å {values[0]} –∫ {values[1]}: {course[2]}"
                                                   f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –ø–æ —Ç–µ–∫—É—â–µ–º—É –∫—É—Ä—Å—É: {round(float(finaly_text), 2)*amount}")

    except Exception:
        bot.send_message(message.chat.id,"–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –∑–Ω–∞—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ —Å–ª—ç—à:")
        bot.register_next_step_handler(message, owncurrency)

def News(message):
    global new_post_url
    URL = "https://bcs-express.ru/category"
    response = requests.get(URL)
    html = response.text

    soup = BeautifulSoup(html, 'html.parser')

    newest_post = soup.find('div', class_='TjB6 KSLV Ncpb E6j8')

    title = soup.find('a', class_='iKzE').text.strip()
    description = soup.find('p', class_="OIgY").text.strip()
    url = soup.find('a', class_='iKzE', href=True)['href'].strip()

    if url != new_post_url:
        new_post_url = url
        bot.send_message(message.chat.id, f"‚ùóÔ∏è<b>{str(title).upper()}</b>‚ùóÔ∏è\n\n<i>{description}</i>\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç: {url}",parse_mode='HTML')
    time.sleep(60)
    News(message)
def Lesson_1(message):
    bot.send_message(message.chat.id, "–≠—Ç–æ —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫! –ó–¥–µ—Å—å —Ç–µ–±–µ –¥–∞–µ—Ç—Å—è —Å—Ç–∞—Ç—å—è –∏ –∫—Ä–∞—Ç–∫–∞—è –≤–´–∂–∏–º–∫–∞ —ç—Ç–æ–π —Å—Ç–∞—Ç—å–∏.\n\n–¢–∞–∫–∂–µ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫ –Ω–∞ —é—Ç—É–±–µ –ø—Ä–æ <b>–§–ò–ù–ê–ù–°–û–í–£–Æ –ì–†–ê–ú–û–¢–ù–û–°–¢–¨!</b>",parse_mode="HTML")
    time.sleep(3)
    bot.send_message(message.chat.id,"https://telegra.ph/Osnovy-finansov-06-30-2")
    time.sleep(3)
    bot.send_message(message.chat.id, "https://www.youtube.com/watch?v=S88HZWjuVZg")
    time.sleep(3)
    bot.send_message(message.chat.id,"""<b>–ì–ª–∞–≤–Ω–æ–µ –æ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö –≤ 5 –ø—É–Ω–∫—Ç–∞—Ö:</b>\n
1 - –§–∏–Ω–∞–Ω—Å—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –≤—Å–µ –¥–µ–Ω—å–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ–º, –±–∏–∑–Ω–µ—Å–æ–º –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º–∏ –ª–∏—Ü–∞–º–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –±–æ–≥–∞—Ç—Å—Ç–≤–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏.\n
2 - –°—É—â–µ—Å—Ç–≤—É—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∏–¥—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤: –ª–∏—á–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã, –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã, –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã. –ö–∞–∂–¥—ã–π –≤–∏–¥ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –∏–º–µ–µ—Ç —Å–≤–æ–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.\n
3 - –§—É–Ω–∫—Ü–∏–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ ‚Äî —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–æ–Ω—Ç—Ä–æ–ª—å, —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ —Å—Ç–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ.\n
4 - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –≤–∫–ª—é—á–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤, –∞ –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ü–µ–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è.\n
5 - –ó–Ω–∞–Ω–∏–µ –æ—Å–Ω–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –∏–º–µ–µ—Ç –≤–∞–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏, –ø—Ä–∏–Ω—è—Ç–∏—è –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤, –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π –∫–∞–∫ –¥–ª—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü, —Ç–∞–∫ –∏ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞."""
                     ,parse_mode="HTML")
    markup = types.InlineKeyboardMarkup()
    btn_skip = types.InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç",callback_data="skip_test_1")
    btn_start = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç",callback_data="start_test_1")
    markup.add(btn_start,btn_skip)
    time.sleep(3)
    bot.send_message(message.chat.id,"–ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç—É?",reply_markup=markup)

def Test_1(message):
    markup = types.ReplyKeyboardMarkup()
    a = types.KeyboardButton('a')
    b = types.KeyboardButton('b')
    c = types.KeyboardButton('c')
    coin = 0
    markup.row(a,b,c)
    bot.send_photo(message.chat.id,"https://1drv.ms/i/c/d59c6f998f225afd/IQMVAjrglX9yToDT5vvL_hnbAci3TqZ-HF57MgBreqwj7wA?width=936&height=682", caption="<b>–ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–∏–Ω–∞–Ω—Å—ã?</b>"
                                               "\n\na) –°–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç—å –¥–µ–Ω–µ–≥, –∞–∫—Ç–∏–≤–æ–≤ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç —Ç–æ–ª—å–∫–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞. "
                                               "\n\nb) –°–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç—å –¥–µ–Ω–µ–≥, –∞–∫—Ç–∏–≤–æ–≤ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞, –∫–æ–º–ø–∞–Ω–∏–∏ –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞."
                                               "\n\nc) –ù–∞–ª–∏—á–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Å—á–µ—Ç–∞.", parse_mode="HTML",reply_markup=markup)
    bot.register_next_step_handler(message,t1a1)


def t1a1(message):
    if message.text == "b":
        bot.send_message(message.chat.id,"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úÖ")
        bot.delete_message(message.chat.id,message.message_id-1)
        time.sleep(2)
        bot.delete_message(message.chat.id,message.message_id+1)
        t1q2(message)

    else:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ–≤—Ç–µ—Ç ‚ùå"
                                          "\n\n–ü—Ä–∞–≤–∏–ª—å—ã–π –æ—Ç–≤–µ—Ç - –°–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç—å –¥–µ–Ω–µ–≥, –∞–∫—Ç–∏–≤–æ–≤ –∏ —Ä–µ—Å—É—Ä—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞, –∫–æ–º–ø–∞–Ω–∏–∏ –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞.")
        time.sleep(5)
        bot.delete_message(message.chat.id, message.message_id-1)
        bot.delete_message(message.chat.id, message.message_id+1)
        t1q2(message)
def t1q2(message):
    markup = types.ReplyKeyboardMarkup()
    a = types.KeyboardButton('a')
    b = types.KeyboardButton('b')
    c = types.KeyboardButton('c')
    coin = 0
    markup.row(a, b, c)
    bot.send_photo(message.chat.id,
                   "https://1drv.ms/i/c/d59c6f998f225afd/IQO_jvdKPTWXTba-a7nXuMgJAe9wgjvyKPIFz9qKeienNlw?width=1024",
                   caption="<b>–ö–∞–∫—É—é —Ä–æ–ª—å –∏–≥—Ä–∞—é—Ç —Ñ–∏–Ω–∞–Ω—Å—ã –≤ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ?</b>"
                           "\n\na) –û–Ω–∏ –Ω–µ –∏–≥—Ä–∞—é—Ç –Ω–∏–∫–∞–∫–æ–π —Ä–æ–ª–∏."
                           "\n\nb) –û–Ω–∏ —Ç–æ–ª—å–∫–æ —É–º–µ–Ω—å—à–∞—é—Ç —Ä–∞—Å—Ö–æ–¥—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ä—ã–Ω–æ–∫."
                           "\n\nc) –û–Ω–∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –ø–æ—Ç–æ–∫–∏ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.", parse_mode="HTML", reply_markup=markup)
    bot.register_next_step_handler(message, t1a2)

def t1a2(message):
    if message.text == "c":
        bot.send_message(message.chat.id,"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úÖ")
        bot.delete_message(message.chat.id,message.message_id-1)
        time.sleep(2)
        bot.delete_message(message.chat.id,message.message_id+1)
        t1q3(message)

    else:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ–≤—Ç–µ—Ç ‚ùå"
                                          "\n\n–ü—Ä–∞–≤–∏–ª—å—ã–π –æ—Ç–≤–µ—Ç - –û–Ω–∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –ø–æ—Ç–æ–∫–∏ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.")
        time.sleep(5)
        bot.delete_message(message.chat.id, message.message_id-1)
        bot.delete_message(message.chat.id, message.message_id+1)
        t1q3(message)
def t1q3(message):
    markup = types.ReplyKeyboardMarkup()
    a = types.KeyboardButton('a')
    b = types.KeyboardButton('b')
    c = types.KeyboardButton('c')
    coin = 0
    markup.row(a, b, c)
    bot.send_photo(message.chat.id,
                   "https://1drv.ms/i/c/d59c6f998f225afd/IQPOctGtBSvlRKp-YYFKeBc1ASUov30aELiCDGN69eki6dM?width=1024",
                   caption="<b>–ß—Ç–æ –≤–∫–ª—é—á–∞—é—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã?</b>"
                           "\n\na) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º –¥–æ–ª–≥–æ–º –∏ –Ω–∞–ª–æ–≥–æ–≤–æ–π –ø–æ–ª–∏—Ç–∏–∫–æ–π."
                           "\n\nb) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –∏ –∫–æ–º–ø–∞–Ω–∏–π, –≤–∫–ª—é—á–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–∞–ø–∏—Ç–∞–ª –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏."
                           "\n\nc) –¢–æ–ª—å–∫–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞–º–∏ –∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü.", parse_mode="HTML",
                   reply_markup=markup)
    bot.register_next_step_handler(message, t1a3)
def t1a3(message):
    if message.text == "b":
        bot.send_message(message.chat.id,"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úÖ")
        bot.delete_message(message.chat.id,message.message_id-1)
        time.sleep(2)
        bot.delete_message(message.chat.id,message.message_id+1)
        t1q4(message)

    else:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ–≤—Ç–µ—Ç ‚ùå"
                                          "\n\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –∏ –∫–æ–º–ø–∞–Ω–∏–π, –≤–∫–ª—é—á–∞—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–∞–ø–∏—Ç–∞–ª –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏.")
        time.sleep(5)
        bot.delete_message(message.chat.id, message.message_id-1)
        bot.delete_message(message.chat.id, message.message_id+1)
        t1q4(message)
def t1q4(message):
    markup = types.ReplyKeyboardMarkup()
    a = types.KeyboardButton('a')
    b = types.KeyboardButton('b')
    c = types.KeyboardButton('c')
    coin = 0
    markup.row(a, b, c)
    bot.send_photo(message.chat.id,
                   "https://1drv.ms/i/c/d59c6f998f225afd/IQMUuxkgkqRGSqcTncWYKm58ASFzYoGMvV9OxBKZUEsCP2U?width=1024",
                   caption="<b>–ß—Ç–æ –≤–∫–ª—é—á–∞—é—Ç –ª–∏—á–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å—ã?</b>"
                           "\n\na) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞–º–∏, —Ä–∞—Å—Ö–æ–¥–∞–º–∏, —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è–º–∏ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏."
                           "\n\nb) –¢–æ–ª—å–∫–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ–Ω—Å–∏–∏."
                           "\n\nc) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º –±—é–¥–∂–µ—Ç–æ–º.", parse_mode="HTML",
                   reply_markup=markup)
    bot.register_next_step_handler(message, t1a4)
def t1a4(message):
    if message.text == "a":
        bot.send_message(message.chat.id,"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úÖ")
        bot.delete_message(message.chat.id,message.message_id-1)
        time.sleep(2)
        bot.delete_message(message.chat.id,message.message_id+1)
        t1q5(message)

    else:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ–≤—Ç–µ—Ç ‚ùå"
                                          "\n\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞–º–∏, —Ä–∞—Å—Ö–æ–¥–∞–º–∏, —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è–º–∏ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º–∏.")
        time.sleep(5)
        bot.delete_message(message.chat.id, message.message_id-1)
        bot.delete_message(message.chat.id, message.message_id+1)
        t1q5(message)
def t1q5(message):
    markup = types.ReplyKeyboardMarkup()
    a = types.KeyboardButton('a')
    b = types.KeyboardButton('b')
    c = types.KeyboardButton('c')
    coin = 0
    markup.row(a, b, c)
    bot.send_photo(message.chat.id,
                   "https://1drv.ms/i/c/d59c6f998f225afd/IQN8ja6mJFZWSJyZuCAp2sSAAQNR6ULUfZJgfjfDrzz4QOs?width=1024",
                   caption="<b>–ö–∞–∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å –ø–æ–º–æ–≥–∞–µ—Ç –≤ –∂–∏–∑–Ω–∏?</b>"
                           "\n\na) –ú–Ω–µ –Ω–∏—á–µ–º, —è –≤–µ–¥—å –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞—é :("
                           "\n\nb) –ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∏—Å–∫–∏ –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π."
                           "\n\nc) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º –±—é–¥–∂–µ—Ç–æ–º.", parse_mode="HTML",
                   reply_markup=markup)
    bot.register_next_step_handler(message, t1a5)
def t1a5(message):
    if message.text == "b":
        bot.send_message(message.chat.id,"–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úÖ")
        bot.delete_message(message.chat.id,message.message_id-1)
        time.sleep(2)
        bot.delete_message(message.chat.id,message.message_id+1)
        markup = types.ReplyKeyboardMarkup()
        btn_con = types.KeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        markup.add(btn_con)
        bot.send_message(message.chat.id, "–¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å —Ç–µ—Å—Ç–æ–º! –ü–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é?", reply_markup=markup)
        bot.register_next_step_handler(message, Lesson_2)


    elif message.text == "c":
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ–≤—Ç–µ—Ç ‚ùå"
                                          "\n\n–ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∏—Å–∫–∏ –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π.")
        time.sleep(5)
        bot.delete_message(message.chat.id, message.message_id-1)
        bot.delete_message(message.chat.id, message.message_id+1)
        markup = types.ReplyKeyboardMarkup()
        btn_con = types.KeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        markup.add(btn_con)
        bot.send_message(message.chat.id, "–¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å —Ç–µ—Å—Ç–æ–º! –ü–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é?",reply_markup=markup)
        bot.register_next_step_handler(callback.message, Lesson_2)
    elif message.text == "a":
        bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ –≤ —ç—Ç–æ–º —Å—Ç—Ä–∞—à–Ω–æ–≥–æ –Ω–µ—Ç :)\n\n–ü–æ—Å–º–æ—Ç—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–π –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫ –ø—Ä–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã –±—ã—Ç—å –æ—Å–≤–µ–¥–æ–º–ª–µ–Ω–Ω—ã–º –≤ —ç—Ç–æ–π —Ç–µ–º–µ!\n\n(–ø—Å—Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º –±—ã–ª –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–¥ –±—É–∫–≤–æ–π b)"
                                          "https://youtu.be/a8kV0zVWRX4?si=n0xZxwZG8lrE0HyR")
        bot.delete_message(message.chat.id, message.message_id - 1)

        markup = types.ReplyKeyboardMarkup()
        btn_con = types.KeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        markup.add(btn_con)
        bot.send_message(message.chat.id, "–¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å —Ç–µ—Å—Ç–æ–º! –ü–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é?", reply_markup=markup)
        bot.register_next_step_handler(message, Lesson_2)

def Lesson_2(message):
    markup = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–≠—Ç–æ –≤—Ç–æ—Ä–æ–π –º–æ–¥—É–ª—å –∏ –æ–Ω –ø–æ—Å–≤—è—â–µ–Ω <b>–§–ò–ù–ê–ù–°–û–í–´–ú –†–´–ù–ö–ê–ú.</b>\n\n–ù–∞ –≤–æ–æ—Ä—É–∂–µ–Ω–∏–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Å—Ç–∞—Ç—å—è —Å —Ç–µ–º–æ–π –º–æ–¥—É–ª—è –∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–æ–≤ –Ω–∞ —é—Ç—É–±–µ. –ù–∞—á–Ω–µ–º! ", reply_markup=markup,parse_mode="HTML")
    time.sleep(3)
    bot.send_message(message.chat.id,"–°—Ç–∞—Ç—å—è:\n\nhttps://telegra.ph/Finansovyj-rynok-07-01")
    time.sleep(3)
    bot.send_message(message.chat.id,"–í–∏–¥–µ–æ—Ä–ª–∏–∫ –ø—Ä–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ä—ã–Ω–æ–∫:\n\nhttps://www.youtube.com/watch?v=90O3YqZi9v4")
    time.sleep(3)
    bot.send_message(message.chat.id,"–í–∏–¥–µ–æ—Ä–ª–∏–∫ –ø—Ä–æ –±–∏—Ä–∂—É:\n\nhttps://www.youtube.com/watch?v=HzEVqIMtfGU")
    time.sleep(3)
    bot.send_message(message.chat.id,"–í–∏–¥–µ–æ—Ä–æ–ª–∏–∫ –ø—Ä–æ –≤–Ω–µ–±–∏—Ä–∂–µ–≤–æ–π —Ä—ã–Ω–æ–∫:\n\nhttps://youtu.be/vJyzEKZuh5Y?si=Znj4iCjYZkBuRB7U")
    time.sleep(3)
    bot.send_message(message.chat.id,"–í–∏–¥–µ–æ—Ä–æ–ª–∏–∫ –ø—Ä–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä—ã–Ω–∫–∞:\n\nhttps://www.youtube.com/watch?v=t2zWK3KdWFU")
    time.sleep(3)
    bot.send_message(message.chat.id,"–ê —Ç–∞–∫–∂–µ —Å–ª–æ–≤–∞—Ä—å –±–∏—Ä–∂–µ–≤—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤ :)\n\nhttps://youtu.be/AVviPv367Vg?si=xb9bslOMr9k40vo_")
    time.sleep(3)
    markup = types.InlineKeyboardMarkup()
    btn_skip = types.InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç", callback_data="skip_test_2")
    btn_start = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç", callback_data="start_test_2")
    markup.add(btn_start, btn_skip)
    time.sleep(3)
    bot.send_message(message.chat.id, "–ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç—É?", reply_markup=markup)

def Test_2(message):
    markup = types.ReplyKeyboardMarkup()
    a = types.KeyboardButton('a')
    b = types.KeyboardButton('b')
    c = types.KeyboardButton('c')
    markup.row(a, b, c)
    bot.send_photo(message.chat.id,
                   "https://1drv.ms/i/c/d59c6f998f225afd/IQMGGBEK7DDHQpb3kUlS-URJAZqZtTaZZCAwwdxC4VGOico?width=1024",
                   caption="<b>–ö–∞–∫—É—é —Ä–æ–ª—å –∏–≥—Ä–∞—é—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä—ã–Ω–∫–∏ –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ?</b>"
                           "\n\na) –û–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –æ–±–º–µ–Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏."
                           "\n\nb) –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç –Ω–∞–ª–æ–≥–æ–≤—ã–µ —Å—Ç–∞–≤–∫–∏."
                           "\n\nc) –ü—Ä–æ–∏–∑–≤–æ–¥—è—Ç —Ç–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏.", parse_mode="HTML", reply_markup=markup)
    bot.register_next_step_handler(message, t2a1)

def t2a1(message):
    try:
        if message.text == "a":
            bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úÖ")
            bot.delete_message(message.chat.id, message.message_id - 1)
            time.sleep(2)
            bot.delete_message(message.chat.id, message.message_id + 1)
            t2q2(message)
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚ùå"
                                              "\n\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –û–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –æ–±–º–µ–Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏.")
            time.sleep(5)
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id + 1)
            t2q2(message)
    except:
        Test_2(message)

def t2q2(message):
    markup = types.ReplyKeyboardMarkup()
    a = types.KeyboardButton('a')
    b = types.KeyboardButton('b')
    c = types.KeyboardButton('c')
    markup.row(a, b, c)
    bot.send_photo(message.chat.id,
                   "https://1drv.ms/i/c/d59c6f998f225afd/IQMot_3bYwVVT7xWRcSLf8wPAdjH8raIjSvMHpvhCQuofEc?width=1024",
                   caption="<b>–ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–æ–Ω–¥–æ–≤—ã–µ —Ä—ã–Ω–∫–∏?</b>"
                           "\n\na) –†—ã–Ω–∫–∏, –≥–¥–µ —Ç–æ—Ä–≥—É—é—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏."
                           "\n\nb) –†—ã–Ω–∫–∏, –≥–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±–º–µ–Ω –≤–∞–ª—é—Ç."
                           "\n\nc) –†—ã–Ω–∫–∏, –≥–¥–µ –∫–æ–º–ø–∞–Ω–∏–∏ –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç –∫–∞–ø–∏—Ç–∞–ª, –≤—ã–ø—É—Å–∫–∞—è –∞–∫—Ü–∏–∏.", parse_mode="HTML", reply_markup=markup)
    bot.register_next_step_handler(message, t2a2)

def t2a2(message):
    try:
        if message.text == "c":
            bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úÖ")
            bot.delete_message(message.chat.id, message.message_id - 1)
            time.sleep(2)
            bot.delete_message(message.chat.id, message.message_id + 1)
            t2q3(message)
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚ùå"
                                              "\n\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –†—ã–Ω–∫–∏, –≥–¥–µ –∫–æ–º–ø–∞–Ω–∏–∏ –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç –∫–∞–ø–∏—Ç–∞–ª, –≤—ã–ø—É—Å–∫–∞—è –∞–∫—Ü–∏–∏.")
            time.sleep(5)
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id + 1)
            t2q3(message)
    except:
        t2q2(message)
def t2q3(message):
    markup = types.ReplyKeyboardMarkup()
    a = types.KeyboardButton('a')
    b = types.KeyboardButton('b')
    c = types.KeyboardButton('c')
    markup.row(a, b, c)
    bot.send_photo(message.chat.id,
                   "https://1drv.ms/i/c/d59c6f998f225afd/IQNhRCg5X4QWTLEdSR0l9MdLAW2LmZQNpoFR6W12IPkjTWM?width=1024",
                   caption="<b>–ö—Ç–æ —è–≤–ª—è—é—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≤–∞–ª—é—Ç–Ω—ã—Ö —Ä—ã–Ω–∫–æ–≤?</b>"
                           "\n\na) –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤."
                           "\n\nb) –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –±–∞–Ω–∫–∏, –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–π–¥–µ—Ä—ã."
                           "\n\nc) –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω—ã.", parse_mode="HTML", reply_markup=markup)
    bot.register_next_step_handler(message, t2a3)

def t2a3(message):
    try:
        if message.text == "b":
            bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úÖ")
            bot.delete_message(message.chat.id, message.message_id - 1)
            time.sleep(2)
            bot.delete_message(message.chat.id, message.message_id + 1)
            t2q4(message)
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚ùå"
                                              "\n\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –±–∞–Ω–∫–∏, –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–π–¥–µ—Ä—ã.")
            time.sleep(5)
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id + 1)
            t2q4(message)
    except:
        t2q3(message)

def t2q4(message):
    markup = types.ReplyKeyboardMarkup()
    a = types.KeyboardButton('a')
    b = types.KeyboardButton('b')
    c = types.KeyboardButton('c')
    markup.row(a, b, c)
    bot.send_photo(message.chat.id,
                   "https://1drv.ms/i/c/d59c6f998f225afd/IQMNIs3Y0b7-SI62ufMuKok-AROmhkxxOAtJOI-4UHmyRsQ?width=1024",
                   caption="<b>–ß—Ç–æ —Ç–∞–∫–æ–µ —Ö–µ–¥–∂–∏—Ä–æ–≤–∞–Ω–∏–µ?</b>"
                           "\n\na) –ü—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏."
                           "\n\nb) –°—Ç—Ä–∞—Ç–µ–≥–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏."
                           "\n\nc) –°–ø–æ—Å–æ–± —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –Ω–∞ —Ç–æ–≤–∞—Ä—ã.", parse_mode="HTML", reply_markup=markup)
    bot.register_next_step_handler(message, t2a4)

def t2a4(message):
    try:
        if message.text == "b":
            bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úÖ")
            bot.delete_message(message.chat.id, message.message_id - 1)
            time.sleep(2)
            bot.delete_message(message.chat.id, message.message_id + 1)
            t2q5(message)
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚ùå"
                                              "\n\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –°—Ç—Ä–∞—Ç–µ–≥–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏.")
            time.sleep(5)
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id + 1)
            t2q5(message)
    except:
        t2q4(message)

def t2q5(message):
    markup = types.ReplyKeyboardMarkup()
    a = types.KeyboardButton('a')
    b = types.KeyboardButton('b')
    c = types.KeyboardButton('c')
    markup.row(a, b, c)
    bot.send_photo(message.chat.id,
                   "https://1drv.ms/i/c/d59c6f998f225afd/IQPne9wcuZ0ZQq5YHCo0AvxYAXwb1XAYApdVHT_qnviGloI?width=1024",
                   caption="<b>–ö–∞–∫—É—é —Ä–æ–ª—å –∏–≥—Ä–∞—é—Ç –±—Ä–æ–∫–µ—Ä—ã –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä—ã–Ω–∫–∞—Ö?</b>"
                           "\n\na) –°–æ–∑–¥–∞—é—Ç –Ω–æ–≤—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã."
                           "\n\nb) –ü–æ–º–æ–≥–∞—é—Ç –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º –∏ —Ç—Ä–µ–π–¥–µ—Ä–∞–º –ø–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã."
                           "\n\nc) –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç –∏ —Ä–µ–≥—É–ª–∏—Ä—É—é—Ç –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä—ã–Ω–∫–æ–≤.", parse_mode="HTML", reply_markup=markup)
    bot.register_next_step_handler(message, t2a5)

def t2a5(message):
    try:
        if message.text == "b":
            bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!‚úÖ")
            bot.delete_message(message.chat.id, message.message_id - 1)
            time.sleep(2)
            bot.delete_message(message.chat.id, message.message_id + 1)
            markup = types.ReplyKeyboardMarkup()
            btn_con = types.KeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
            markup.add(btn_con)
            bot.send_message(message.chat.id, "–¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å —Ç–µ—Å—Ç–æ–º! –ü–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é?", reply_markup=markup)
            bot.register_next_step_handler(message, Lesson_3)
        else:
            bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚ùå"
                                              "\n\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –ü–æ–º–æ–≥–∞—é—Ç –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º –∏ —Ç—Ä–µ–π–¥–µ—Ä–∞–º –ø–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.")
            time.sleep(5)
            bot.delete_message(message.chat.id, message.message_id - 1)
            bot.delete_message(message.chat.id, message.message_id + 1)
            markup = types.ReplyKeyboardMarkup()
            btn_con = types.KeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
            markup.add(btn_con)
            bot.send_message(message.chat.id, "–¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å —Ç–µ—Å—Ç–æ–º! –ü–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é?", reply_markup=markup)
            bot.register_next_step_handler(message, Lesson_3)
    except:
        t2a5(message)

def Lesson_3(message):
    markup = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id,"–ú–æ–¥—É–ª—å 3 - –¢–æ–≤–∞—Ä–Ω—ã–µ —Ä—ã–Ω–∫–∏ - –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.",reply_markup=markup)



@bot.message_handler()
def info(message):
    if any(word in message.text.lower() for word in ["—Ö—Ä","—Ö—Ä—é","–æ–Ω—å–∫","üêΩ"]):
        bot.send_message(message.chat.id, random.choice(["–•—Ä—é —Ö—Ä—é!",
                                                         "–û–Ω—å–∫ —Ö—Ä—Ä—Ä—Ä –æ–Ω—å–∫ –æ–Ω—å–∫",
                                                         "–ù—É –∏ —Å–≤–∏–Ω—å—è....\n–•—Ä—é –æ–Ω—å–∫ –æ–Ω—å–∫!",
                                                         "–ù–µ —É–≤–∏–¥–µ–ª —Å—Ä–∞–∑—É –≤ –≤–∞—Å –Ω–µ—Ç–∏–ø–∏—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–∞! –ù—É —á—Ç–æ–∂, —Ö—Ä—é —Ö—Ä—é!",
                                                         "—Ö—Ä—Ä—Ä",
                                                         "üëÅüêΩüëÅ"]))
        bot.send_photo(message.chat.id,"https://1drv.ms/i/c/d59c6f998f225afd/IQN22fvhqKbmQrrqUrji3AtqAQ3w_GN-bbfUSmTGCt6qrsU?width=1024")
    else:
        bot.send_message(message.chat.id, random.choice(
            ["–î–∞, —ç—Ç–æ –≤—Å—ë –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–æ–Ω–µ—á–Ω–æ.", "–ü–æ–Ω—è–ª —Ç–µ–±—è.. —Ö–æ—Ç—è –º–æ–∂–µ—Ç –∏ –Ω–µ –ø–æ–Ω—è–ª... –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ...", "–ò–∑–≤–æ–ª—å—Ç–µ.",
             "–•–º, —Ö–æ—Ä–æ—à–æ."]))
bot.polling(non_stop=True)